<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tax Invoice - Tirupati Gold House</title>
    <link rel="stylesheet" href="stylesheets/Billing.css">
    <style>
        .no-print { display: flex; gap: 10px; }
        .no-print button { padding: 10px 15px; border: none; cursor: pointer; font-size: 14px; }
        .print-button { background-color: #4CAF50; color: white; }
        .save-button { background-color: #2196F3; color: white; }
        .clear-button { background-color: #f44336; color: white; }
        .delete-row { background-color: #ff9800; color: white; padding: 5px 10px; border: none; cursor: pointer; }
        
        @media print {
            .no-print { display: none; }
            .invoice-table th:last-child, .invoice-table td:last-child { display: none; }
            input[type="text"], input[type="number"], input[type="date"] { 
                border: none; 
                background: transparent; 
                appearance: none;
                pointer-events: none;
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="invoice-container">
        <div class="header">
            <div class="company-details">
                <img src="logo.png" alt="Company Logo" class="logo">
                <div class="company-info">
                    <h2>TIRUPATI GOLD HOUSE</h2>
                    <p>264, Diamond Harbour Road, Opp. Behala Thana, Kolkata - 700009, West Bengal</p>
                    <p>Mobile: +91 9836765690</p>
                </div>
            </div>
            <div class="gst-container">
                <p class="gst-label">GSTIN:</p>
                <p class="gst-value">19AKXPP2097D1Z1</p>
            </div>
        </div>
        
        <h2 class="invoice-title">Tax Invoice</h2>
        
        <div class="invoice-details">
            <div class="invoice-meta">
                <p><strong>Invoice No:</strong> <input type="text" id="invoice-number"></p>
                <p><strong>Date:</strong> <input type="date" id="invoice-date"></p>
                <p><strong>Place of Supply:</strong> West Bengal</p>
            </div>
            <div class="customer-details">
                <h3>Invoice To:</h3>
                <p><strong>Name:</strong> <input type="text" id="customer-name"></p>
                <p><strong>Address:</strong> <input type="text" id="customer-address"></p>
                <p><strong>Mobile:</strong> <input type="text" id="customer-mobile"></p>
            </div>
        </div>
        
        <table class="invoice-table" id="invoice-table">
            <thead>
                <tr>
                    <th>Item Description</th>
                    <th>PCS</th>
                    <th>Purity</th>
                    <th>Weight (g)</th>
                    <th>Rate (&#8377;/g)</th>
                    <th>Amount (&#8377;)</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="invoice-body"></tbody>
        </table>
        <button onclick="addRow()">Add Item</button>
        
        <div class="footer">
            <p><strong>Total Amount Payable: &#8377; <span id="total-amount">0.00</span></strong></p>
            <p><strong>Amount in Words:</strong> <span id="amount-in-words">Zero Only</span></p>
        </div>
        
        <div class="signature-container">
            <div class="customer-signature">
                <p>Customer Signature</p>
            </div>
            <div class="authorized-signature">
                <p>Authorized Signature</p>
            </div>
        </div>
        
        <div class="button-container no-print">
            <button class="print-button" onclick="printInvoice()">Print</button>
            <button class="save-button" onclick="saveInvoice()">Save</button>
            <button class="clear-button" onclick="clearRowData()">Clear</button>
        </div>
    </div>
    
    <script>
        let currentFocusedRow;

        document.addEventListener('focusin', function(e) {
            if (e.target && e.target.tagName === 'INPUT') {
                currentFocusedRow = e.target.closest('tr');
            }
        });

        function addRow() {
            let table = document.getElementById("invoice-body");
            let row = document.createElement("tr");
            row.innerHTML = `
                <td><input type="text" oninput="updateAmount(this)"></td>
                <td><input type="number" value="1" oninput="updateAmount(this)"></td>
                <td><input type="text"></td>
                <td><input type="number" step="0.01" oninput="updateAmount(this)"></td>
                <td><input type="number" step="0.01" oninput="updateAmount(this)"></td>
                <td><input type="number" step="0.01" class="manual-amount" value="" oninput="updateTotal()"></td>
                <td><button class="delete-row" onclick="deleteRow(this)">Delete</button></td>
            `;
            table.appendChild(row);
            updateTotal();
        }

        function deleteRow(button) {
            button.parentElement.parentElement.remove();
            updateTotal();
        }

        function clearRowData() {
            if (currentFocusedRow) {
                currentFocusedRow.querySelectorAll('input').forEach(input => input.value = "");
                updateTotal();
            } else {
                document.querySelectorAll(".invoice-details input").forEach(input => input.value = "");
                document.getElementById("invoice-body").innerHTML = "";
                document.getElementById("total-amount").innerText = "0.00";
                document.getElementById("amount-in-words").innerText = "Zero Only";
            }
        }

        function updateAmount(input) {
            let row = input.parentElement.parentElement;
            let pcs = parseFloat(row.children[1].children[0].value) || 0;
            let weight = parseFloat(row.children[3].children[0].value) || 0;
            let rate = parseFloat(row.children[4].children[0].value) || 0;
            let amountInput = row.children[5].children[0];
            let amount = pcs * weight * rate;
            amountInput.value = amount ? amount.toFixed(2) : "";
            updateTotal();
        }

        function updateTotal() {
            let total = 0;
            document.querySelectorAll(".manual-amount").forEach(input => {
                total += parseFloat(input.value) || 0;
            });
            document.getElementById("total-amount").innerText = total.toFixed(2);
        }

        function saveInvoice() {
            let invoiceData = {
                invoiceNumber: document.getElementById("invoice-number").value,
                invoiceDate: document.getElementById("invoice-date").value,
                customerName: document.getElementById("customer-name").value,
                customerAddress: document.getElementById("customer-address").value,
                customerMobile: document.getElementById("customer-mobile").value,
                items: []
            };

            document.querySelectorAll("#invoice-body tr").forEach(row => {
                let item = {
                    description: row.children[0].children[0].value,
                    pcs: row.children[1].children[0].value,
                    purity: row.children[2].children[0].value,
                    weight: row.children[3].children[0].value,
                    rate: row.children[4].children[0].value,
                    amount: row.children[5].children[0].value
                };
                invoiceData.items.push(item);
            });

            localStorage.setItem("savedInvoice", JSON.stringify(invoiceData));
            alert("Invoice saved successfully!");
        }

        function printInvoice() {
            window.print();
        }
    </script>
</body>
</html>
